{
    "$schema": "https://zed.dev/schema/icon_themes/v0.2.0.json",
    "name": "Charmed Icons",
    "author": "littensy",
    "themes": [
        {
            "name": "Base Charmed Icons",
            "appearance": "dark",
            "directory_icons": {
                "collapsed": "./icons/base/_folder.svg",
                "expanded": "./icons/base/_folder_open.svg"
            },
            "file_stems": {
                "astro.config.js": "astro-config",
                "astro.config.mjs": "astro-config",
                "astro.config.cjs": "astro-config",
                "astro.config.ts": "astro-config",
                "astro.config.cts": "astro-config",
                "astro.config.mts": "astro-config",
                "bun.lock": "bun-lock",
                "bun.lockb": "bun-lock",
                "bunfig.toml": "bun",
                "changelog": "changelog",
                "changelog.md": "changelog",
                "changelog.rst": "changelog",
                "changelog.txt": "changelog",
                "changes": "changelog",
                "changes.md": "changelog",
                "changes.rst": "changelog",
                "changes.txt": "changelog",
                "code_of_conduct": "code-of-conduct",
                "code_of_conduct.md": "code-of-conduct",
                "code_of_conduct.txt": "code-of-conduct",
                "contributing": "code-of-conduct",
                "contributing.md": "code-of-conduct",
                "contributing.txt": "code-of-conduct",
                "contributing.rst": "code-of-conduct",
                "funding.yml": "code-of-conduct",
                "codeowners": "codeowners",
                "owners": "codeowners",
                "cspell.json": "config",
                ".cspell.json": "config",
                "biome.json": "config",
                "biome.jsonc": "config",
                ".commitlintrc": "config",
                ".commitlintrc.js": "config",
                ".commitlintrc.cjs": "config",
                ".commitlintrc.ts": "config",
                ".commitlintrc.cts": "config",
                ".commitlintrc.json": "config",
                ".commitlintrc.yaml": "config",
                ".commitlintrc.yml": "config",
                ".commitlint.yaml": "config",
                ".commitlint.yml": "config",
                ".editorconfig": "config",
                ".env.defaults": "config",
                ".env.example": "config",
                ".env.sample": "config",
                ".env.template": "config",
                ".env.schema": "config",
                ".env.local": "config",
                ".env.dev": "config",
                ".env.development": "config",
                ".env.alpha": "config",
                ".env.e2e": "config",
                ".env.qa": "config",
                ".env.dist": "config",
                ".env.prod": "config",
                ".env.production": "config",
                ".env.stage": "config",
                ".env.staging": "config",
                ".env.preview": "config",
                ".env.test": "config",
                ".env.testing": "config",
                ".env.development.local": "config",
                ".env.qa.local": "config",
                ".env.production.local": "config",
                ".env.staging.local": "config",
                ".env.test.local": "config",
                ".env.uat": "config",
                ".env.cat": "config",
                "esbuild.js": "config",
                "esbuild.ts": "config",
                "esbuild.cjs": "config",
                "esbuild.mjs": "config",
                ".firebaserc": "config",
                "fvm_config.json": "config",
                "gatsby-config.js": "config",
                "gatsby-config.mjs": "config",
                "gatsby-config.ts": "config",
                ".graphqlconfig": "config",
                ".graphqlrc": "config",
                ".graphqlrc.json": "config",
                ".graphqlrc.js": "config",
                ".graphqlrc.cjs": "config",
                ".graphqlrc.ts": "config",
                ".graphqlrc.toml": "config",
                ".graphqlrc.yaml": "config",
                ".graphqlrc.yml": "config",
                ".huskyrc": "config",
                ".huskyrc.json": "config",
                ".huskyrc.js": "config",
                ".huskyrc.yaml": "config",
                ".huskyrc.yml": "config",
                ".prettierrc": "config",
                ".prettierrc.js": "config",
                ".prettierrc.cjs": "config",
                ".prettierrc.json": "config",
                ".prettierrc.json5": "config",
                ".prettierrc.yaml": "config",
                ".prettierrc.yml": "config",
                ".prettierrc.toml": "config",
                ".prettierrc.mjs": "config",
                ".prettierignore": "config",
                "dockerfile": "docker",
                "dockerfile.prod": "docker",
                "dockerfile.production": "docker",
                "dockerfile.alpha": "docker",
                "dockerfile.beta": "docker",
                "dockerfile.stage": "docker",
                "dockerfile.staging": "docker",
                "dockerfile.dev": "docker",
                "dockerfile.development": "docker",
                "dockerfile.local": "docker",
                "dockerfile.test": "docker",
                "dockerfile.testing": "docker",
                "dockerfile.ci": "docker",
                "dockerfile.web": "docker",
                "dockerfile.worker": "docker",
                "containerfile": "docker",
                "containerfile.prod": "docker",
                "containerfile.production": "docker",
                "containerfile.alpha": "docker",
                "containerfile.beta": "docker",
                "containerfile.stage": "docker",
                "containerfile.staging": "docker",
                "containerfile.dev": "docker",
                "containerfile.development": "docker",
                "containerfile.local": "docker",
                "containerfile.test": "docker",
                "containerfile.testing": "docker",
                "containerfile.ci": "docker",
                "containerfile.web": "docker",
                "containerfile.worker": "docker",
                "docker-compose.yml": "docker",
                "docker-compose.override.yml": "docker",
                "docker-compose.prod.yml": "docker",
                "docker-compose.production.yml": "docker",
                "docker-compose.alpha.yml": "docker",
                "docker-compose.beta.yml": "docker",
                "docker-compose.stage.yml": "docker",
                "docker-compose.staging.yml": "docker",
                "docker-compose.dev.yml": "docker",
                "docker-compose.development.yml": "docker",
                "docker-compose.local.yml": "docker",
                "docker-compose.test.yml": "docker",
                "docker-compose.testing.yml": "docker",
                "docker-compose.ci.yml": "docker",
                "docker-compose.web.yml": "docker",
                "docker-compose.worker.yml": "docker",
                "docker-compose.yaml": "docker",
                "docker-compose.override.yaml": "docker",
                "docker-compose.prod.yaml": "docker",
                "docker-compose.production.yaml": "docker",
                "docker-compose.alpha.yaml": "docker",
                "docker-compose.beta.yaml": "docker",
                "docker-compose.stage.yaml": "docker",
                "docker-compose.staging.yaml": "docker",
                "docker-compose.dev.yaml": "docker",
                "docker-compose.development.yaml": "docker",
                "docker-compose.local.yaml": "docker",
                "docker-compose.test.yaml": "docker",
                "docker-compose.testing.yaml": "docker",
                "docker-compose.ci.yaml": "docker",
                "docker-compose.web.yaml": "docker",
                "docker-compose.worker.yaml": "docker",
                "compose.yaml": "docker",
                "compose.override.yaml": "docker",
                "compose.prod.yaml": "docker",
                "compose.production.yaml": "docker",
                "compose.alpha.yaml": "docker",
                "compose.beta.yaml": "docker",
                "compose.stage.yaml": "docker",
                "compose.staging.yaml": "docker",
                "compose.dev.yaml": "docker",
                "compose.development.yaml": "docker",
                "compose.local.yaml": "docker",
                "compose.test.yaml": "docker",
                "compose.testing.yaml": "docker",
                "compose.ci.yaml": "docker",
                "compose.web.yaml": "docker",
                "compose.worker.yaml": "docker",
                "compose.yml": "docker",
                "compose.override.yml": "docker",
                "compose.prod.yml": "docker",
                "compose.production.yml": "docker",
                "compose.alpha.yml": "docker",
                "compose.beta.yml": "docker",
                "compose.stage.yml": "docker",
                "compose.staging.yml": "docker",
                "compose.dev.yml": "docker",
                "compose.development.yml": "docker",
                "compose.local.yml": "docker",
                "compose.test.yml": "docker",
                "compose.testing.yml": "docker",
                "compose.ci.yml": "docker",
                "compose.web.yml": "docker",
                "compose.worker.yml": "docker",
                "drizzle.config.ts": "drizzle-orm",
                "drizzle.config.js": "drizzle-orm",
                ".eslintignore": "eslint",
                ".eslintcache,": "eslint",
                ".eslintrc.js": "eslint",
                ".eslintrc.cjs": "eslint",
                ".eslintrc.yaml": "eslint",
                ".eslintrc.yml": "eslint",
                ".eslintrc.json": "eslint",
                ".eslintrc-md.js": "eslint",
                ".eslintrc-jsdoc.js": "eslint",
                ".eslintrc": "eslint",
                "eslint.config.js": "eslint",
                "eslint.config.cjs": "eslint",
                "eslint.config.mjs": "eslint",
                "eslint.config.ts": "eslint",
                "eslint.config.cts": "eslint",
                "eslint.config.mts": "eslint",
                ".git": "git",
                ".gitignore": "git",
                ".gitmessage": "git",
                ".gitignore-global": "git",
                ".gitignore_global": "git",
                ".gitattributes": "git",
                ".gitattributes-global": "git",
                ".gitattributes_global": "git",
                ".gitconfig": "git",
                ".gitmodules": "git",
                ".gitkeep": "git",
                ".keep": "git",
                ".gitpreserve": "git",
                ".gitinclude": "git",
                ".git-blame-ignore": "git",
                ".git-blame-ignore-revs": "git",
                ".git-for-windows-updater": "git",
                "git-history": "git",
                ".gitpod.yml": "git",
                "gleam.toml": "gleam",
                "go.mod": "go-mod",
                "go.sum": "go-mod",
                "go.work": "go-mod",
                "go.work.sum": "go-mod",
                ".gdignore": "godot-assets",
                "._sc_": "godot-assets",
                "_sc_": "godot-assets",
                "jsconfig.json": "javascript-config",
                ".jscsrc": "json",
                ".jshintrc": "json",
                ".jsbeautifyrc": "json",
                ".esformatter": "json",
                "cdp.pid": "json",
                ".lintstagedrc": "json",
                ".whitesource": "json",
                "justfile": "just",
                ".justfile": "just",
                ".htpasswd": "key",
                "copying": "license",
                "copying.md": "license",
                "copying.rst": "license",
                "copying.txt": "license",
                "copyright": "license",
                "copyright.md": "license",
                "copyright.rst": "license",
                "copyright.txt": "license",
                "LICENSE": "license",
                "license": "license",
                "license-agpl": "license",
                "license-apache": "license",
                "license-bsd": "license",
                "license-mit": "license",
                "license-gpl": "license",
                "license-lgpl": "license",
                "unlicense": "license",
                "license.md": "license",
                "license.rst": "license",
                "license.txt": "license",
                "licence": "license",
                "licence-agpl": "license",
                "licence-apache": "license",
                "licence-bsd": "license",
                "licence-mit": "license",
                "licence-gpl": "license",
                "licence-lgpl": "license",
                "unlicence": "license",
                "licence.md": "license",
                "licence.rst": "license",
                "licence.txt": "license",
                ".luacheckrc": "lua-config",
                ".styluaignore": "lua-config",
                "stylua.toml": "lua-config",
                "selene.toml": "lua-config",
                "selene_defs.yml": "lua-config",
                "selene_defs.yaml": "lua-config",
                "selene_definitions.yml": "lua-config",
                "selene_definitions.yaml": "lua-config",
                "selene-definitions.yml": "lua-config",
                "selene-definitions.yaml": "lua-config",
                "testez.yml": "lua-config",
                "testez.yaml": "lua-config",
                "roblox.yml": "lua-config",
                "roblox.yaml": "lua-config",
                "js-to-lua.config.js": "lua-config",
                "darklua.json": "lua-config",
                ".darklua.json": "lua-config",
                ".darklua-dev.json": "lua-config",
                ".darklua-tests.json": "lua-config",
                ".darklua-wally.json": "lua-config",
                ".darklua-bundle.json": "lua-config",
                ".darklua-bundle-dev.json": "lua-config",
                ".luaurc": "luau-config",
                ".robloxrc": "luau-config",
                ".luau-analyze.json": "luau-config",
                "luau-analyze.json": "luau-config",
                "sourcemap.json": "luau-config",
                "makefile": "makefile",
                "gnumakefile": "makefile",
                "kbuild": "makefile",
                "next.config.js": "next",
                "next.config.mjs": "next",
                "next.config.ts": "next",
                "next.config.mts": "next",
                "flake.lock": "nix",
                "package.json": "node",
                ".nvmrc": "node",
                ".esmrc": "node",
                ".node-version": "node",
                "pnpm-lock.yaml": "node",
                "pnpm-workspace.yaml": "node",
                ".pnpmfile.cjs": "node",
                "package-lock.json": "npm-lock",
                ".npmignore": "npm",
                ".npmrc": "npm",
                ".nuxtignore": "nuxt",
                ".nuxtrc": "nuxt",
                "nuxt.config.js": "nuxt",
                "nuxt.config.ts": "nuxt",
                "aftman.toml": "package-config",
                "cargo.toml": "package-config",
                "composer.json": "package-config",
                "foreman.toml": "package-config",
                "pesde.toml": "package-config",
                "pixi.toml": "package-config",
                "rokit.toml": "package-config",
                "rotriever.toml": "package-config",
                "uv.toml": "package-config",
                "deno.json": "package-config",
                "deno.jsonc": "package-config",
                "gemfile": "package-config",
                "cargo.lock": "package-lock",
                "composer.lock": "package-lock",
                "pesde.lock": "package-lock",
                "pixi.lock": "package-lock",
                "poetry.lock": "package-lock",
                "rotriever.lock": "package-lock",
                "uv.lock": "package-lock",
                "deno.lock": "package-lock",
                "gemfile.lock": "package-lock",
                "postcss.config.js": "pcss",
                "postcss.config.cjs": "pcss",
                "postcss.config.mjs": "pcss",
                "postcss.config.ts": "pcss",
                "postcss.config.cts": "pcss",
                "postcss.config.mts": "pcss",
                ".postcssrc.js": "pcss",
                ".postcssrc.cjs": "pcss",
                ".postcssrc.ts": "pcss",
                ".postcssrc.cts": "pcss",
                ".postcssrc": "pcss",
                ".postcssrc.json": "pcss",
                ".postcssrc.yaml": "pcss",
                ".postcssrc.yml": "pcss",
                "pyproject.toml": "python",
                "requirements.txt": "python",
                "requirements-dev.txt": "python",
                "requirements-test.txt": "python",
                ".python-version": "python",
                "readme.md": "readme",
                "readme.rst": "readme",
                "readme.txt": "readme",
                "readme": "readme",
                "tarmac.toml": "roblox-config",
                "asphalt.toml": "roblox-config",
                ".ruby-version": "ruby",
                "rustfmt.toml": "rust-config",
                ".rustfmt.toml": "rust-config",
                "rust-toolchain.toml": "rust-config",
                "clippy.toml": "rust-config",
                "security.md": "security",
                "security.txt": "security",
                "security": "security",
                "applypatch-msg": "shell",
                "pre-applypatch": "shell",
                "post-applypatch": "shell",
                "pre-commit": "shell",
                "prepare-commit-message": "shell",
                "commit-msg": "shell",
                "post-commit": "shell",
                "pre-rebase": "shell",
                "post-checkout": "shell",
                "post-merge": "shell",
                "pre-receive": "shell",
                "update": "shell",
                "post-receive": "shell",
                "post-update": "shell",
                "pre-auto-gc": "shell",
                "post-rewrite": "shell",
                "pre-push": "shell",
                "svelte.config.js": "svelte",
                "svelte.config.ts": "svelte",
                "svelte.config.cjs": "svelte",
                "svelte.config.mjs": "svelte",
                "tailwind.js": "tailwind",
                "tailwind.ts": "tailwind",
                "tailwind.config.js": "tailwind",
                "tailwind.config.cjs": "tailwind",
                "tailwind.config.mjs": "tailwind",
                "tailwind.config.ts": "tailwind",
                "tailwind.config.cts": "tailwind",
                "tailwind.config.mts": "tailwind",
                "spec.lua": "test-blue",
                "test.lua": "test-blue",
                "tests.lua": "test-blue",
                "spec.luau": "test-teal",
                "test.luau": "test-teal",
                "tests.luau": "test-teal",
                "todo.md": "todo",
                "todos.md": "todo",
                "todo.txt": "todo",
                "todos.txt": "todo",
                "todo": "todo",
                "todos": "todo",
                "tsconfig.json": "typescript-config",
                "tsconfig.app.json": "typescript-config",
                "tsconfig.editor.json": "typescript-config",
                "tsconfig.spec.json": "typescript-config",
                "tsconfig.base.json": "typescript-config",
                "tsconfig.build.json": "typescript-config",
                "tsconfig.eslint.json": "typescript-config",
                "tsconfig.lib.json": "typescript-config",
                "tsconfig.lib.prod.json": "typescript-config",
                "tsconfig.node.json": "typescript-config",
                "tsconfig.test.json": "typescript-config",
                "tsconfig.e2e.json": "typescript-config",
                "tsconfig.web.json": "typescript-config",
                "tsconfig.webworker.json": "typescript-config",
                "tsconfig.worker.json": "typescript-config",
                "tsconfig.config.json": "typescript-config",
                "tsconfig.vitest.json": "typescript-config",
                "tsconfig.cjs.json": "typescript-config",
                "tsconfig.esm.json": "typescript-config",
                "tsconfig.mjs.json": "typescript-config",
                "tsconfig.doc.json": "typescript-config",
                "tsconfig.paths.json": "typescript-config",
                "tsconfig.main.json": "typescript-config",
                "tsconfig.cypress-ct.json": "typescript-config",
                "tsconfig.components.json": "typescript-config",
                "vite.config.js": "vite",
                "vite.config.mjs": "vite",
                "vite.config.cjs": "vite",
                "vite.config.ts": "vite",
                "vite.config.cts": "vite",
                "vite.config.mts": "vite",
                "vitest.config.ts": "vite",
                "vitest.config.mts": "vite",
                "vitest.config.cts": "vite",
                "vitest.config.js": "vite",
                "vitest.config.mjs": "vite",
                "vitest.config.cjs": "vite",
                "vitest.workspace.js": "vite",
                "vitest.workspace.ts": "vite",
                "vitest.workspace.json": "vite",
                ".vscodeignore": "vscode",
                "vue.config.js": "vue",
                "vue.config.cjs": "vue",
                "vue.config.mjs": "vue",
                "vue.config.ts": "vue",
                "vue.config.cts": "vue",
                "vue.config.mts": "vue",
                ".vuerc": "vue",
                "wally.lock": "wally-lock",
                "wally.toml": "wally",
                ".htaccess": "xml",
                "yarn.lock": "yarn-lock",
                ".yarnrc": "yarn",
                ".yarnclean": "yarn",
                ".yarn-integrity": "yarn",
                "yarn-error.log": "yarn",
                ".yarnrc.yml": "yarn",
                ".yarnrc.yaml": "yarn",
                "yarn.config.cjs": "yarn"
            },
            "file_suffixes": {
                "asm": "assembly",
                "a51": "assembly",
                "inc": "assembly",
                "nasm": "assembly",
                "s": "assembly",
                "ms": "assembly",
                "agc": "assembly",
                "ags": "assembly",
                "aea": "assembly",
                "argus": "assembly",
                "mitigus": "assembly",
                "binsource": "assembly",
                "astro": "astro",
                "aac": "audio",
                "aiff": "audio",
                "alac": "audio",
                "flac": "audio",
                "m4a": "audio",
                "m4p": "audio",
                "mogg": "audio",
                "mp3": "audio",
                "oga": "audio",
                "opus": "audio",
                "wav": "audio",
                "wma": "audio",
                "wv": "audio",
                "mid": "audio",
                "midi": "audio",
                "ogg": "audio",
                "bin": "binary",
                "exe": "binary",
                "msi": "binary",
                "dll": "binary",
                "lib": "binary",
                "so": "binary",
                "dylib": "binary",
                "o": "binary",
                "obj": "binary",
                "a": "binary",
                "h": "c-header",
                "c": "c",
                "i": "c",
                "mi": "c",
                "config.json": "config",
                "config.yaml": "config",
                "config.yml": "config",
                "config.toml": "config",
                "config.js": "config",
                "config.cjs": "config",
                "config.mjs": "config",
                "config.ts": "config",
                "config.lua": "config",
                "config.luau": "config",
                "ini": "config",
                "dlc": "config",
                "config": "config",
                "conf": "config",
                "properties": "config",
                "prop": "config",
                "settings": "config",
                "option": "config",
                "props": "config",
                "prefs": "config",
                "sln.dotsettings": "config",
                "sln.dotsettings.user": "config",
                "cfg": "config",
                "env": "config",
                "envrc": "config",
                "hh": "cpp-header",
                "hpp": "cpp-header",
                "hxx": "cpp-header",
                "h++": "cpp-header",
                "hp": "cpp-header",
                "tcc": "cpp-header",
                "inl": "cpp-header",
                "cc": "cpp",
                "cpp": "cpp",
                "cxx": "cpp",
                "c++": "cpp",
                "cp": "cpp",
                "mii": "cpp",
                "ii": "cpp",
                "cs": "cs",
                "csx": "cs",
                "csharp": "cs",
                "css": "css",
                "css.map": "css",
                "less": "css",
                "csv": "csv",
                "tsv": "csv",
                "psv": "csv",
                "xls": "csv",
                "xlsx": "csv",
                "xlsm": "csv",
                "dart": "dart",
                "freezed.dart": "dart",
                "g.dart": "dart",
                "pdb": "database",
                "sql": "database",
                "pks": "database",
                "pkb": "database",
                "accdb": "database",
                "mdb": "database",
                "sqlite": "database",
                "sqlite3": "database",
                "pgsql": "database",
                "postgres": "database",
                "plpgsql": "database",
                "psql": "database",
                "db": "database",
                "db3": "database",
                "dat": "database",
                "dockerfile": "docker",
                "containerfile": "docker",
                "dockerignore": "docker",
                "containerignore": "docker",
                "docker-compose.yml": "docker",
                "docker-compose.yaml": "docker",
                "compose.yaml": "docker",
                "compose.yml": "docker",
                "zap": "event",
                "blink": "event",
                "woff": "font",
                "woff2": "font",
                "ttf": "font",
                "eot": "font",
                "suit": "font",
                "otf": "font",
                "bmap": "font",
                "fnt": "font",
                "odttf": "font",
                "ttc": "font",
                "font": "font",
                "fonts": "font",
                "sui": "font",
                "ntf": "font",
                "mrf": "font",
                "f": "fortran-fixed",
                "for": "fortran-fixed",
                "f77": "fortran-fixed",
                "f90": "fortran",
                "f95": "fortran",
                "f03": "fortran",
                "f08": "fortran",
                "patch": "git",
                "gitlab-ci.yml": "git",
                "gitlab-ci.yaml": "git",
                "gleam": "gleam",
                "go": "go",
                "tmpl": "go",
                "templ": "go",
                "gotmpl": "go",
                "gohtml": "go",
                "go.tmp": "go",
                "go.html": "go",
                "godot": "godot-assets",
                "tres": "godot-assets",
                "tscn": "godot-assets",
                "gdns": "godot-assets",
                "gdnlib": "godot-assets",
                "gdshader": "godot-assets",
                "gdshaderinc": "godot-assets",
                "gdextension": "godot-assets",
                "gd": "godot",
                "hcl": "hcl",
                "htm": "html",
                "html": "html",
                "xhtml": "html",
                "html_vm": "html",
                "asp": "html",
                "png": "image",
                "jpeg": "image",
                "jpg": "image",
                "gif": "image",
                "ico": "image",
                "tif": "image",
                "tiff": "image",
                "psd": "image",
                "psb": "image",
                "ami": "image",
                "apx": "image",
                "avif": "image",
                "bmp": "image",
                "bpg": "image",
                "brk": "image",
                "cur": "image",
                "dds": "image",
                "dng": "image",
                "exr": "image",
                "fpx": "image",
                "gbr": "image",
                "img": "image",
                "jbig2": "image",
                "jb2": "image",
                "jng": "image",
                "jxr": "image",
                "pgf": "image",
                "pic": "image",
                "raw": "image",
                "webp": "image",
                "eps": "image",
                "afphoto": "image",
                "ase": "image",
                "aseprite": "image",
                "clip": "image",
                "cpt": "image",
                "heif": "image",
                "heic": "image",
                "kra": "image",
                "mdp": "image",
                "ora": "image",
                "pdn": "image",
                "reb": "image",
                "sai": "image",
                "tga": "image",
                "xcf": "image",
                "jfif": "image",
                "ppm": "image",
                "pbm": "image",
                "pgm": "image",
                "pnm": "image",
                "icns": "image",
                "jar": "java",
                "java": "java",
                "class": "java",
                "jsp": "java",
                "jsconfig.json": "javascript-config",
                "js.map": "javascript-config",
                "mjs.map": "javascript-config",
                "cjs.map": "javascript-config",
                "esx": "javascript",
                "js": "javascript",
                "cjs": "javascript",
                "mjs": "javascript",
                "json": "json",
                "jsonc": "json",
                "tsbuildinfo": "json",
                "json5": "json",
                "jsonl": "json",
                "ndjson": "json",
                "hjson": "json",
                "webmanifest": "json",
                "jl": "julia",
                "just": "just",
                "pub": "key",
                "key": "key",
                "pem": "key",
                "asc": "key",
                "gpg": "key",
                "passwd": "key",
                "keystore": "key",
                "kt": "kotlin",
                "kts": "kotlin",
                "tex": "latex",
                "sty": "latex",
                "dtx": "latex",
                "ltx": "latex",
                "cer": "license",
                "cert": "license",
                "crt": "license",
                "pfx": "license",
                "lock": "lock",
                "lua": "lua",
                "d.luau": "luau-def",
                "h.luau": "luau-def",
                "luau": "luau",
                "mk": "makefile",
                "md": "markdown",
                "markdown": "markdown",
                "rst": "markdown",
                "mdx": "markdownx",
                "nim": "nim",
                "nims": "nim",
                "nimble": "nim",
                "paths": "nim",
                "nix": "nix",
                "odin": "odin",
                "pcss": "pcss",
                "sss": "pcss",
                "pdf": "pdf",
                "pl": "perl",
                "pm": "perl",
                "pod": "perl",
                "t": "perl",
                "psgi": "perl",
                "raku": "perl",
                "rakumod": "perl",
                "rakutest": "perl",
                "rakudoc": "perl",
                "nqp": "perl",
                "p6": "perl",
                "pl6": "perl",
                "pm6": "perl",
                "php": "php",
                "phtml": "php",
                "bat": "powershell",
                "cmd": "powershell",
                "ps1": "powershell",
                "psm1": "powershell",
                "psd1": "powershell",
                "ps1xml": "powershell",
                "psc1": "powershell",
                "pssc": "powershell",
                "py": "python",
                "pyc": "python",
                "pyo": "python",
                "pyd": "python",
                "tsx": "react-typescript",
                "jsx": "react",
                "project.json": "roblox-config",
                "meta.json": "roblox-config",
                "rbxp": "roblox-config",
                "rbxl.lock": "roblox-lock",
                "rbxlx.lock": "roblox-lock",
                "tarmac-manifest.toml": "roblox-lock",
                "asphalt.lock.toml": "roblox-lock",
                "rbxm": "roblox-model",
                "rbxmx": "roblox-model",
                "model.json": "roblox-model",
                "rbxl": "roblox",
                "rbxlx": "roblox",
                "rb": "ruby",
                "erb": "ruby",
                "rbs": "ruby",
                "rs": "rust",
                "ron": "rust",
                "scala": "scala",
                "sc": "scala",
                "scss": "scss",
                "sass": "scss",
                "sh": "shell",
                "ksh": "shell",
                "csh": "shell",
                "tcsh": "shell",
                "zsh": "shell",
                "bash": "shell",
                "awk": "shell",
                "fish": "shell",
                "story.svelte": "storybook",
                "stories.svelte": "storybook",
                "story.vue": "storybook",
                "stories.vue": "storybook",
                "stories.js": "storybook",
                "stories.jsx": "storybook",
                "stories.mdx": "storybook",
                "story.js": "storybook",
                "story.jsx": "storybook",
                "stories.ts": "storybook",
                "stories.tsx": "storybook",
                "storybook.ts": "storybook",
                "storybook.tsx": "storybook",
                "story.ts": "storybook",
                "story.tsx": "storybook",
                "story.mdx": "storybook",
                "stories.lua": "storybook",
                "stories.luau": "storybook",
                "story.lua": "storybook",
                "story.luau": "storybook",
                "storybook.lua": "storybook",
                "storybook.luau": "storybook",
                "svelte": "svelte",
                "svg": "svg",
                "swift": "swift",
                "tf": "terraform",
                "tf.json": "terraform",
                "tfvars": "terraform",
                "tfstate": "terraform",
                "tfbackend": "terraform",
                "spec.ts": "test-blue",
                "spec.cts": "test-blue",
                "spec.mts": "test-blue",
                "cy.ts": "test-blue",
                "e2e-spec.ts": "test-blue",
                "e2e-spec.cts": "test-blue",
                "e2e-spec.mts": "test-blue",
                "test.ts": "test-blue",
                "test.cts": "test-blue",
                "test.mts": "test-blue",
                "ts.snap": "test-blue",
                "spec-d.ts": "test-blue",
                "test-d.ts": "test-blue",
                "spec.tsx": "test-blue",
                "test.tsx": "test-blue",
                "tsx.snap": "test-blue",
                "cy.tsx": "test-blue",
                "spec.lua": "test-blue",
                "test.lua": "test-blue",
                "jest.config.ts": "test-blue",
                "jest.config.tsx": "test-blue",
                "jest.config.lua": "test-blue",
                "jest.setup.ts": "test-blue",
                "jest.setup.tsx": "test-blue",
                "jest.setup.lua": "test-blue",
                "jest.teardown.ts": "test-blue",
                "jest.teardown.tsx": "test-blue",
                "jest.teardown.lua": "test-blue",
                "spec.luau": "test-teal",
                "test.luau": "test-teal",
                "jest.config.luau": "test-teal",
                "jest.setup.luau": "test-teal",
                "jest.teardown.luau": "test-teal",
                "spec.js": "test-yellow",
                "spec.cjs": "test-yellow",
                "spec.mjs": "test-yellow",
                "e2e-spec.js": "test-yellow",
                "e2e-spec.cjs": "test-yellow",
                "e2e-spec.mjs": "test-yellow",
                "test.js": "test-yellow",
                "test.cjs": "test-yellow",
                "test.mjs": "test-yellow",
                "js.snap": "test-yellow",
                "cy.js": "test-yellow",
                "spec.jsx": "test-yellow",
                "test.jsx": "test-yellow",
                "jsx.snap": "test-yellow",
                "cy.jsx": "test-yellow",
                "jest.config.js": "test-yellow",
                "jest.config.jsx": "test-yellow",
                "jest.setup.js": "test-yellow",
                "jest.setup.jsx": "test-yellow",
                "jest.teardown.js": "test-yellow",
                "jest.teardown.jsx": "test-yellow",
                "txt": "text",
                "rtf": "text",
                "doc": "text",
                "docx": "text",
                "todo": "todo",
                "toml": "toml",
                "tsconfig.json": "typescript-config",
                "d.ts": "typescript-def",
                "d.cts": "typescript-def",
                "d.mts": "typescript-def",
                "ts": "typescript",
                "cts": "typescript",
                "mts": "typescript",
                "webm": "video",
                "mkv": "video",
                "flv": "video",
                "vob": "video",
                "ogv": "video",
                "gifv": "video",
                "avi": "video",
                "mov": "video",
                "qt": "video",
                "wmv": "video",
                "yuv": "video",
                "rm": "video",
                "rmvb": "video",
                "mp4": "video",
                "m4v": "video",
                "mpg": "video",
                "mp2": "video",
                "mpeg": "video",
                "mpe": "video",
                "mpv": "video",
                "m2v": "video",
                "csproj": "visual-studio",
                "ruleset": "visual-studio",
                "sln": "visual-studio",
                "slnx": "visual-studio",
                "suo": "visual-studio",
                "vb": "visual-studio",
                "vbs": "visual-studio",
                "vcxitems": "visual-studio",
                "vcxitems.filters": "visual-studio",
                "vcxproj": "visual-studio",
                "vcxproj.filters": "visual-studio",
                "vsixmanifest": "vscode",
                "vsix": "vscode",
                "code-workplace": "vscode",
                "code-workspace": "vscode",
                "code-profile": "vscode",
                "code-snippets": "vscode",
                ".vscode/json": "vscode",
                "vue": "vue",
                "wasm": "web-assembly",
                "wat": "web-assembly",
                "workflows/yml": "workflow",
                "workflows/yaml": "workflow",
                "xml": "xml",
                "plist": "xml",
                "xsd": "xml",
                "dtd": "xml",
                "xsl": "xml",
                "xslt": "xml",
                "resx": "xml",
                "iml": "xml",
                "xquery": "xml",
                "tmLanguage": "xml",
                "manifest": "xml",
                "project": "xml",
                "xml.dist": "xml",
                "xml.dist.sample": "xml",
                "dmn": "xml",
                "jrxml": "xml",
                "xaml": "xml",
                "axaml": "xml",
                "yml": "yaml",
                "yaml": "yaml",
                "zig": "zig",
                "7z": "zip",
                "arj": "zip",
                "aseprite-extension": "zip",
                "bz": "zip",
                "bz2": "zip",
                "gz": "zip",
                "paq8n": "zip",
                "paq8o": "zip",
                "pkg": "zip",
                "rar": "zip",
                "tar": "zip",
                "tbz": "zip",
                "tbz2": "zip",
                "tgz": "zip",
                "xz": "zip",
                "z": "zip",
                "zip": "zip",
                "zpaq": "zip",
                "zst": "zip"
            },
            "file_icons": {
                "default": {
                    "path": "./icons/base/_file.svg"
                },
                "assembly": {
                    "path": "./icons/base/assembly.svg"
                },
                "astro-config": {
                    "path": "./icons/base/astro-config.svg"
                },
                "astro": {
                    "path": "./icons/base/astro.svg"
                },
                "audio": {
                    "path": "./icons/base/audio.svg"
                },
                "binary": {
                    "path": "./icons/base/binary.svg"
                },
                "bun-lock": {
                    "path": "./icons/base/bun-lock.svg"
                },
                "bun": {
                    "path": "./icons/base/bun.svg"
                },
                "c-header": {
                    "path": "./icons/base/c-header.svg"
                },
                "c": {
                    "path": "./icons/base/c.svg"
                },
                "changelog": {
                    "path": "./icons/base/changelog.svg"
                },
                "code-of-conduct": {
                    "path": "./icons/base/code-of-conduct.svg"
                },
                "codeowners": {
                    "path": "./icons/base/codeowners.svg"
                },
                "config": {
                    "path": "./icons/base/config.svg"
                },
                "cpp-header": {
                    "path": "./icons/base/cpp-header.svg"
                },
                "cpp": {
                    "path": "./icons/base/cpp.svg"
                },
                "cs": {
                    "path": "./icons/base/cs.svg"
                },
                "css": {
                    "path": "./icons/base/css.svg"
                },
                "css3": {
                    "path": "./icons/base/css3.svg"
                },
                "csv": {
                    "path": "./icons/base/csv.svg"
                },
                "dart": {
                    "path": "./icons/base/dart.svg"
                },
                "database": {
                    "path": "./icons/base/database.svg"
                },
                "docker": {
                    "path": "./icons/base/docker.svg"
                },
                "drizzle-orm": {
                    "path": "./icons/base/drizzle-orm.svg"
                },
                "eslint": {
                    "path": "./icons/base/eslint.svg"
                },
                "event": {
                    "path": "./icons/base/event.svg"
                },
                "font": {
                    "path": "./icons/base/font.svg"
                },
                "fortran-fixed": {
                    "path": "./icons/base/fortran-fixed.svg"
                },
                "fortran": {
                    "path": "./icons/base/fortran.svg"
                },
                "git": {
                    "path": "./icons/base/git.svg"
                },
                "gleam": {
                    "path": "./icons/base/gleam.svg"
                },
                "go-mod": {
                    "path": "./icons/base/go-mod.svg"
                },
                "go": {
                    "path": "./icons/base/go.svg"
                },
                "godot-assets": {
                    "path": "./icons/base/godot-assets.svg"
                },
                "godot": {
                    "path": "./icons/base/godot.svg"
                },
                "hcl": {
                    "path": "./icons/base/hcl.svg"
                },
                "html": {
                    "path": "./icons/base/html.svg"
                },
                "image": {
                    "path": "./icons/base/image.svg"
                },
                "java": {
                    "path": "./icons/base/java.svg"
                },
                "javascript-config": {
                    "path": "./icons/base/javascript-config.svg"
                },
                "javascript": {
                    "path": "./icons/base/javascript.svg"
                },
                "json": {
                    "path": "./icons/base/json.svg"
                },
                "julia": {
                    "path": "./icons/base/julia.svg"
                },
                "just": {
                    "path": "./icons/base/just.svg"
                },
                "key": {
                    "path": "./icons/base/key.svg"
                },
                "kotlin": {
                    "path": "./icons/base/kotlin.svg"
                },
                "latex": {
                    "path": "./icons/base/latex.svg"
                },
                "license": {
                    "path": "./icons/base/license.svg"
                },
                "lock": {
                    "path": "./icons/base/lock.svg"
                },
                "lua-config": {
                    "path": "./icons/base/lua-config.svg"
                },
                "lua": {
                    "path": "./icons/base/lua.svg"
                },
                "luau-config": {
                    "path": "./icons/base/luau-config.svg"
                },
                "luau-def": {
                    "path": "./icons/base/luau-def.svg"
                },
                "luau": {
                    "path": "./icons/base/luau.svg"
                },
                "makefile": {
                    "path": "./icons/base/makefile.svg"
                },
                "markdown": {
                    "path": "./icons/base/markdown.svg"
                },
                "markdownx": {
                    "path": "./icons/base/markdownx.svg"
                },
                "next": {
                    "path": "./icons/base/next.svg"
                },
                "nim": {
                    "path": "./icons/base/nim.svg"
                },
                "nix": {
                    "path": "./icons/base/nix.svg"
                },
                "node": {
                    "path": "./icons/base/node.svg"
                },
                "npm-lock": {
                    "path": "./icons/base/npm-lock.svg"
                },
                "npm": {
                    "path": "./icons/base/npm.svg"
                },
                "nuxt": {
                    "path": "./icons/base/nuxt.svg"
                },
                "odin": {
                    "path": "./icons/base/odin.svg"
                },
                "package-config": {
                    "path": "./icons/base/package-config.svg"
                },
                "package-lock": {
                    "path": "./icons/base/package-lock.svg"
                },
                "pcss": {
                    "path": "./icons/base/pcss.svg"
                },
                "pdf": {
                    "path": "./icons/base/pdf.svg"
                },
                "perl": {
                    "path": "./icons/base/perl.svg"
                },
                "php": {
                    "path": "./icons/base/php.svg"
                },
                "powershell": {
                    "path": "./icons/base/powershell.svg"
                },
                "python": {
                    "path": "./icons/base/python.svg"
                },
                "react-typescript": {
                    "path": "./icons/base/react-typescript.svg"
                },
                "react": {
                    "path": "./icons/base/react.svg"
                },
                "readme": {
                    "path": "./icons/base/readme.svg"
                },
                "roblox-config": {
                    "path": "./icons/base/roblox-config.svg"
                },
                "roblox-lock": {
                    "path": "./icons/base/roblox-lock.svg"
                },
                "roblox-model": {
                    "path": "./icons/base/roblox-model.svg"
                },
                "roblox": {
                    "path": "./icons/base/roblox.svg"
                },
                "ruby": {
                    "path": "./icons/base/ruby.svg"
                },
                "rust-config": {
                    "path": "./icons/base/rust-config.svg"
                },
                "rust": {
                    "path": "./icons/base/rust.svg"
                },
                "scala": {
                    "path": "./icons/base/scala.svg"
                },
                "scss": {
                    "path": "./icons/base/scss.svg"
                },
                "security": {
                    "path": "./icons/base/security.svg"
                },
                "shell": {
                    "path": "./icons/base/shell.svg"
                },
                "storybook": {
                    "path": "./icons/base/storybook.svg"
                },
                "svelte": {
                    "path": "./icons/base/svelte.svg"
                },
                "svg": {
                    "path": "./icons/base/svg.svg"
                },
                "swift": {
                    "path": "./icons/base/swift.svg"
                },
                "tailwind": {
                    "path": "./icons/base/tailwind.svg"
                },
                "terraform": {
                    "path": "./icons/base/terraform.svg"
                },
                "test-blue": {
                    "path": "./icons/base/test-blue.svg"
                },
                "test-teal": {
                    "path": "./icons/base/test-teal.svg"
                },
                "test-yellow": {
                    "path": "./icons/base/test-yellow.svg"
                },
                "text": {
                    "path": "./icons/base/text.svg"
                },
                "todo": {
                    "path": "./icons/base/todo.svg"
                },
                "toml": {
                    "path": "./icons/base/toml.svg"
                },
                "typescript-config": {
                    "path": "./icons/base/typescript-config.svg"
                },
                "typescript-def": {
                    "path": "./icons/base/typescript-def.svg"
                },
                "typescript": {
                    "path": "./icons/base/typescript.svg"
                },
                "video": {
                    "path": "./icons/base/video.svg"
                },
                "visual-studio": {
                    "path": "./icons/base/visual-studio.svg"
                },
                "vite": {
                    "path": "./icons/base/vite.svg"
                },
                "vscode": {
                    "path": "./icons/base/vscode.svg"
                },
                "vue": {
                    "path": "./icons/base/vue.svg"
                },
                "wally-lock": {
                    "path": "./icons/base/wally-lock.svg"
                },
                "wally": {
                    "path": "./icons/base/wally.svg"
                },
                "web-assembly": {
                    "path": "./icons/base/web-assembly.svg"
                },
                "workflow": {
                    "path": "./icons/base/workflow.svg"
                },
                "xml": {
                    "path": "./icons/base/xml.svg"
                },
                "yaml": {
                    "path": "./icons/base/yaml.svg"
                },
                "yarn-lock": {
                    "path": "./icons/base/yarn-lock.svg"
                },
                "yarn": {
                    "path": "./icons/base/yarn.svg"
                },
                "zig": {
                    "path": "./icons/base/zig.svg"
                },
                "zip": {
                    "path": "./icons/base/zip.svg"
                }
            }
        }
    ]
}
